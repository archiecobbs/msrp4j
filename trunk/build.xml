<?xml version="1.0" encoding="ISO-8859-1"?>

<!-- $Id$ -->
<project name="msrp4j" default="build"
  xmlns:dellroad="urn:org.dellroad.ant"
  xmlns:antcontrib="urn:net.sf.antcontrib"
  xmlns:artifact="antlib:org.apache.maven.artifact.ant"
  xmlns:ivy="urn:org.apache.ivy.ant">

    <!-- Configure build & stuff -->
    <property name="library.version" value="1.0"/>
    <property name="javac.compiler.flags" value="-Xlint:all"/>

    <!-- Import generic build macros -->
    <import file="${basedir}/src/build/macros.xml"/>

    <!-- Determine SVN revision and full version -->
    <dellroad:svnrevision property="svn.revision"/>
    <property name="full.version" value="${library.version}.${svn.revision}"/>
    <echo message=""/>
    <echo message="Version is ${library.version}.${svn.revision}"/>
    <echo message=""/>

    <!-- Classpath targets -->
    <target name="javac.classpath" unless="javac.classpath.resolved">
        <dellroad:ivypath pathid="javac.classpath" conf="javac"/>
        <property name="javac.classpath.resolved" value="true"/>
    </target>

    <target name="unittest.classpath" depends="jar" unless="unittest.classpath.resolved">
        <dellroad:ivypath pathid="unittest.classpath" conf="test"/>
        <property name="unittest.classpath.resolved" value="true"/>
    </target>

    <!-- Resources -->
    <target name="resources" unless="resources.completed" description="Gather resources">
        <delete dir="build/resources"/>
        <mkdir dir="build/resources"/>
        <copy todir="build/resources">
            <fileset dir="src/properties" includes="${ant.project.name}.properties"/>
            <filterset>
                <filter token="VERSION" value="${full.version}"/>
            </filterset>
        </copy>
        <property name="resources.completed" value="true"/>
    </target>

    <!-- Main JAR -->
    <target name="jar" depends="javac, resources" unless="jar.completed" description="Build main JAR">
        <mkdir dir="build/dist"/>
        <delete file="build/dist/${ant.project.name}-${full.version}.jar"/>
        <jar destfile="build/dist/${ant.project.name}-${full.version}.jar">
            <fileset dir="build/classes"/>
            <fileset dir="build/resources"/>
        </jar>
        <property name="jar.completed" value="true"/>
    </target>

    <!-- CLI JAR -->
    <target name="clijar" depends="javac, resources" unless="clijar.completed" description="Build CLI JAR">
        <delete dir="build/cli"/>
        <mkdir dir="build/cli/libs"/>
        <dellroad:ivyput pattern="build/cli/libs/[artifact]-[revision].[ext]" conf="cli"/>
        <mkdir dir="build/cli"/>
        <unzip dest="build/cli">
            <patternset>
                <exclude name="META-INF/MANIFEST.MF"/>
            </patternset>
            <fileset dir="build/cli/libs" includes="*.jar"/>
        </unzip>
        <copy file="src/xml/log4j-cli.xml" toFile="build/cli/log4j.xml"/>
        <delete file="build/dist/${ant.project.name}-cli-${full.version}.jar"/>
        <jar destfile="build/dist/${ant.project.name}-cli-${full.version}.jar">
            <fileset dir="build/classes"/>
            <fileset dir="build/resources"/>
            <fileset dir="build/cli" excludes="libs/**/*"/>
            <manifest>
                <attribute name="Main-Class" value="org.dellroad.msrp.Main"/>
                <attribute name="Implementation-Version" value="${library.version}"/>
                <attribute name="SCM-Revision" value="${svn.revision}"/>
            </manifest>
        </jar>
        <mkdir dir="build/cli"/>
        <property name="clijar.completed" value="true"/>
    </target>

    <!-- All distribution files -->
    <target name="jars" depends="jar, clijar, javadoc" unless="jars.completed" description="Build all JARs">
        <mkdir dir="build/dist"/>
        <delete file="build/dist/${ant.project.name}-sources-${full.version}.zip"/>
        <zip destfile="build/dist/${ant.project.name}-sources-${full.version}.zip">
            <fileset dir="src/java" includes="**/*"/>
        </zip>
        <delete file="build/dist/${ant.project.name}-javadocs-${full.version}.zip"/>
        <zip destfile="build/dist/${ant.project.name}-javadocs-${full.version}.zip">
            <fileset dir="build/reports/javadoc" includes="**/*"/>
        </zip>
        <property name="jars.completed" value="true"/>
    </target>

    <!-- Build Javadocs -->
    <target name="javadoc" depends="javac" unless="javadoc.completed" description="Build API JavaDocs">
        <delete dir="build/javadoc"/>
        <mkdir dir="build/javadoc"/>
        <copy todir="build/javadoc">
            <fileset dir="src/java/org/dellroad/msrp" includes="overview.html"/>
            <filterset>
                <filter token="VERSION" value="${full.version}"/>
            </filterset>
        </copy>
        <dellroad:javadoc overview="build/javadoc/overview.html">
            <additional-classpath>
                <pathelement path="build/classes"/>
            </additional-classpath>
            <links>
                <link href="https://docs.oracle.com/javase/7/docs/api/"/>
                <link href="https://docs.oracle.com/javaee/7/api/"/>
                <link href="http://dellroad-stuff.googlecode.com/svn/trunk/publish/reports/javadoc/"/>
                <link href="http://docs.guava-libraries.googlecode.com/git/javadoc/"/>
                <link href="http://www.slf4j.org/api/"/>
            </links>
        </dellroad:javadoc>
        <property name="javadoc.completed" value="true"/>
    </target>

    <!-- Checkstyle the source -->
    <target name="checkstyle" description="Run checkstyle report"
      depends="javac.classpath, unittest.classpath, checkstyle.classpath" unless="checkstyle.completed">
        <dellroad:checkstyle maxWarnings="0" maxErrors="0"/>
        <property name="checkstyle.completed" value="true"/>
    </target>

    <!-- Run unit tests -->
    <target name="tests" description="Run unit tests"
      depends="javac, unittest.classpath, testng.classpath, cobertura.classpath"
      unless="tests.completed">
        <copy todir="build/test" overwrite="true">
            <fileset dir="src/test" includes="**/*.in"/>
        </copy>
        <copy file="src/xml/log4j-build.xml" tofile="build/test/log4j.xml"/>
        <dellroad:unit-tests>
            <addclasspath>
                <path refid="javac.classpath"/>
            </addclasspath>
        </dellroad:unit-tests>
        <property name="tests.completed" value="true"/>
    </target>

    <!-- Publish reports -->
    <target name="publish" description="Publish build results" depends="reports">

        <!-- Remove exisiting stuff first -->
        <delete includeemptydirs="false">
            <fileset dir="publish">
                <include name="**/*"/>
            </fileset>
        </delete>

        <!-- Reports -->
        <mkdir dir="publish/reports"/>
        <copy todir="publish/reports">
            <fileset dir="build/reports">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <!-- Reports target -->
    <target name="reports-project" depends="javadoc, checkstyle, tests"/>

    <!-- Release time stuff -->
    <target name="release" depends="clean, jars, reports, publish" description="Perform release-time tasks"/>

    <!-- Default target -->
    <target name="build" depends="clean, jars, reports"/>

</project>

